
general:
  screenRes: [1680,1050]
  screenRes_HD: [1920,1080]
  screen_distance: 225
  screen_width: 69

  TR: 1.6

  subs: [1,2,3,4,5,7,8,9,11,12,13]

  HD_screen_subs: [2,11,12,13]

  exclude_subs: [3,5,7,13]

  tasks: ['prf','soma']

  paths:
    local:
      root: '/Volumes/Verissimo_Seagate_Hub_Plus/Projects/Visuomotor/Data'
      atlas: 'atlas/Glasser_et_al_2016_HCP_MMP1.0_qN_RVVG/HCP_PhaseTwo/Q1-Q6_RelatedParcellation210/MNINonLinear/fsaverage_LR32k'
    lisa:
      root: '/project/projects_verissimo/Visuomotor_data'
      batch: '/home/inesv/batch'
      singularity: '/home/inesv/my_images'
      test: '/project/projects_verissimo/Visuomotor_test'
prf:
  PRF_ITI_in_TR: 0.5
  bar_pass_in_TRs:
    empty: 10
    L-R: 18
    R-L: 18
    U-D: 10
    D-U: 10

  bar_pass_direction: ['empty','U-D','R-L','empty','L-R','D-U','empty'] 
  bar_width_ratio: 0.125

soma:
  event_dur_in_sec:
    iti: .5
    empty: 12
    stim: 2.25

  trial_order: ['iti','stim', 'iti']

  n_TR: 141

processing:
  space: 'fsaverage' #'T1w'
  file_ext: '.func.gii'

  fmriprep_sing: 'fmriprep.22.1.1.simg' # fmriprep singularity image name
  mriqc_sing: 'mriqc-0.15.1.simg' # mriqc singularity image name

  crop_TR: 
    soma: 0
    prf: 6

  filter:
    soma: 'sg'
    prf: 'dc'

  first_modes_to_remove: 3 # Number of low-frequency eigenmodes to remove (highpass)

  sg_filt_window_length: 81
  sg_filt_polyorder: 3
  sg_filt_deriv: 0

  smooth_fwhm: 2

eyetracking:

  HP_pupil_f: 0.01
  LP_pupil_f: 6.0
  sampling_freq: 1000

  sacc_thresh: 5 #6 # lambda, median-based standard deviations from the median estimator
  minimum_saccade_duration: 0.006 # 0.016 # minimum duration to consider saccade (ms)

plotting:

  prf:
    rsq_threshold: .2 #0.17 #0.14 

    n_bins: 10
    min_ecc: 0.25
    max_ecc: 3.3

    ROIs: ['V1','V2','V3','V3AB','hV4','LO','IPS0','IPS1','IPS2+','sPCS','iPCS']

    occipital: ['V1','V2','V3','V3AB','hV4','LO']
    parietal: ['IPS0','IPS1','IPS2+']
    frontal: ['sPCS','iPCS']

    n_TR: 84 # after cropping (original 90)

    colormaps:
       ROI_pal: 
        V1: [0.03137255, 0.11372549, 0.34509804]
        V2: [0.14136101, 0.25623991, 0.60530565]
        V3: [0.12026144, 0.50196078, 0.72156863]
        V3AB: [0.25871588, 0.71514033, 0.76807382]
        hV4: [0.59215686, 0.84052288, 0.72418301]
        LO: [0.88207612, 0.9538639 , 0.69785467]
        IPS0: [0.99764706, 0.88235294, 0.52862745]
        IPS1: [0.99529412, 0.66901961, 0.2854902] 
        IPS2+: [0.83058824, 0.06117647, 0.1254902]
        sPCS: [0.88221453, 0.83252595, 0.91109573]
        iPCS: [0.87320261, 0.13071895, 0.47320261]

  soma:
    colormaps:
      face: ['navy','forestgreen','darkorange','purple']
      upper_limb: 'rainbow_r'

    reference_roi: ['3a']
    
    roi2plot:
      M1: ['4'] # primary motor cortex (Brodmann area 4)
      S1: ['3b'] 
      CS: ['3a']
      BA43: ['43', 'OP4'] # BA43, language
      S2: ['OP1']
      POC: ['43', 'FOP1', 'OP4', 'OP1', 'OP2-3', 'PFcm'] #posterior operculum of the Sylvian fissure as defined by glasser paper
      Insula: ['52', 'PI', 'Ig', 'PoI1', 'PoI2', 'FOP2', 'FOP3', 
                'MI', 'AVI', 'AAIC', 'Pir','FOP4', 'FOP5'] #frontal operculum + insula as defined by glasser paper

    glasser_rois:
      M1: ['4'] # primary motor cortex (Brodmann area 4)
      S1: ['3a', '3b', '1', '2'] #['3b'] #['3a', '3b', '1'] # primary sensory cortex (Brodman area 3) 
      S2: ['OP1']
      SMA: ['6mp', '6ma', 'SCEF'] # supplementary motor areas?
      CingMA: ['24dd', '24dv'] # cingulate motor cortex
      sPMC: ['6d', '6a'] # superior premotor areas
      iPMC: ['6v', '6r'] # inferior premotor areas
      others: ['FEF', 'PEF', '55b']

    gross_regions: # as defined in the SG creatures paper (2020)
      parietal: ['3a', '3b', '1', '2', 'PFt', 'PFop', 'AIP', '7PC', 
                '7AL', 'LIPv', 'VIP', '7Am', 'PF', '7PL', 'MIP']
      frontal: ['4', '6d', '6mp', '6v', 'FEF', '6a', '6ma', '6r', '55b', 'PEF']
      medial: ['5m', '5L', '24dd', '5mv', 'SCEF', '24dv', '23c', 'p24pr']
      operculum_insular: ['43', 'OP1', 'OP4', 'PFcm', 'FOP1', 'OP2-3',
                          'RI', 'FOP2', 'FOP3', 'Ig', 'A1', 'PSL', 'LBelt',
                          'PBelt', 'A4', 'Pol1', 'Pol2', '52']

  webview:
    3D_view: 
      angle_params: {'lateral_left': {'camera.azimuth': 87, 'camera.altitude': 90, 'camera.radius': 220, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,},
                      'lateral_right': {'camera.azimuth': 273, 'camera.altitude': 90, 'camera.radius': 220, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,},
                      'top': {'camera.azimuth': 180, 'camera.altitude': 5, 'camera.radius': 270, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,},
                      'bottom': {'camera.azimuth': 0, 'camera.altitude': 180, 'camera.radius': 270, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,},
                      'medial_right': {'camera.azimuth': 87, 'camera.altitude': 100, 'camera.radius': 180, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,'surface.{subject}.left': False,},
                      'medial_left': {'camera.azimuth': 273, 'camera.altitude': 100, 'camera.radius': 180, 'surface.{subject}.specularity': 0, 'surface.{subject}.pivot': 0,'surface.{subject}.right': False,}
                    }
      unfold_params: {'inflated': {'surface.{subject}.unfold': 0.5,},
                      'flatmap': {'surface.{subject}.unfold': 1,},
                      'fiducial': {'surface.{subject}.unfold': 0,},
                      'inflated_half': {'surface.{subject}.unfold': 0.5,},
                      }
        

fitting:
  prf:
    fit_model: 'gauss' #'css'
    optimizer: 'L-BFGS-B' # 'trust-constr'

    type: 'mean' #'loo_run' #'median' # type of fitting to do, if leave-one-run-out or average runs and fit on median

    extension: 'cropped_dc_psc.func.gii'

    fit_hrf: True #False #True
    hrf_onset: 0

    total_chunks: 83

    min_eccen: 0.2
    max_eccen: 15

    y_ecc_lim: None #5.5
    x_ecc_lim: None

    min_size: 0.2
    max_size: 10

    min_n: 0.01
    max_n: 1.1
    n_nr: 20

    grid_nr: 40 #10 

    estimate_keys: {'gauss': ['x','y','size','betas','baseline','r2'],
                    'css': ['x','y','size','betas','baseline','ns', 'r2'],
                    'dn': ['x','y','size','betas','baseline', 'sa', 'ss', 'nb', 'sb', 'r2'],
                    'dog': ['x','y','size','betas','baseline', 'sa', 'ss', 'r2'],
                    'hrf': ['hrf_derivative', 'hrf_dispersion']} # to keep track of variables throughout scripts

  soma:
    glm_single_ops:
      hrf: 'canonical' # 'average' # 'fit'
      denoise: True
      fracr: True

    extension: 'sg_psc.func.gii'

    z_threshold: 3.1 #2.7

    type: 'mean' #'loo_run' #'median' # type of fitting to do, if leave-one-run-out or average runs and fit on median
    use_nilearn_dm: False

    keep_b_evs: True # False

    hrf_params: [1,1,0]
    hrf_onset: 0

    somaRF:
      beta_model: 'glm' # glmsingle

    all_contrasts:
      face: ['eyebrows',
            'eyes',
            'mouth',
            'tongue']

      right_hand: ['rhand_fing1',
                  'rhand_fing2',
                  'rhand_fing3',
                  'rhand_fing4',
                  'rhand_fing5']
      
      left_hand: ['lhand_fing1',
                  'lhand_fing2',
                  'lhand_fing3',
                  'lhand_fing4',
                  'lhand_fing5']

      both_hand: ['bhand_fing1',
                  'bhand_fing2',
                  'bhand_fing3',
                  'bhand_fing4',
                  'bhand_fing5']

      upper_limb: ['lhand_fing1',
                  'lhand_fing2',
                  'lhand_fing3',
                  'lhand_fing4',
                  'lhand_fing5',
                  'rhand_fing1',
                  'rhand_fing2',
                  'rhand_fing3',
                  'rhand_fing4',
                  'rhand_fing5',
                  'bhand_fing1',
                  'bhand_fing2',
                  'bhand_fing3',
                  'bhand_fing4',
                  'bhand_fing5']

      lower_limb: ['lleg',
                  'rleg',
                  'bleg']

    soma_stimulus: ['eyebrows.avi',
                    'eyes.avi',
                    'mouth.avi',
                    'tongue.avi',
                    'lhand_fing1.avi',
                    'lhand_fing2.avi',
                    'lhand_fing3.avi',
                    'lhand_fing4.avi',
                    'lhand_fing5.avi',
                    'lleg.avi',
                    'eyebrows.avi',
                    'eyes.avi',
                    'mouth.avi',
                    'tongue.avi',
                    'bhand_fing1.avi',
                    'bhand_fing2.avi',
                    'bhand_fing3.avi',
                    'bhand_fing4.avi',
                    'bhand_fing5.avi',
                    'bleg.avi',
                    'tongue.avi',
                    'mouth.avi',
                    'eyes.avi',
                    'eyebrows.avi',
                    'rhand_fing1.avi',
                    'rhand_fing2.avi',
                    'rhand_fing3.avi',
                    'rhand_fing4.avi',
                    'rhand_fing5.avi',
                    'rleg.avi',
                    'eyebrows.avi',
                    'eyes.avi',
                    'mouth.avi',
                    'tongue.avi',
                    'lhand_fing5.avi',
                    'lhand_fing4.avi',
                    'lhand_fing3.avi',
                    'lhand_fing2.avi',
                    'lhand_fing1.avi',
                    'lleg.avi',
                    'eyebrows.avi',
                    'eyes.avi',
                    'mouth.avi',
                    'tongue.avi',
                    'bhand_fing5.avi',
                    'bhand_fing4.avi',
                    'bhand_fing3.avi',
                    'bhand_fing2.avi',
                    'bhand_fing1.avi',
                    'bleg.avi',
                    'tongue.avi',
                    'mouth.avi',
                    'eyes.avi',
                    'eyebrows.avi',
                    'rhand_fing5.avi',
                    'rhand_fing4.avi',
                    'rhand_fing3.avi',
                    'rhand_fing2.avi',
                    'rhand_fing1.avi',
                    'rleg.avi']




